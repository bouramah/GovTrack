{
	"info": {
		"_postman_id": "reunion-notification-service-complete",
		"name": "GovTrack - ReunionNotificationService Complete",
		"description": "Collection compl√®te pour tester toutes les m√©thodes du ReunionNotificationService",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "üîê Authentification",
			"item": [
				{
					"name": "Login - Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('token');",
									"    pm.environment.set(\"auth_token\", jsonData.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@govtrack.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üìã Notifications d'une R√©union",
			"item": [
				{
					"name": "R√©cup√©rer les notifications d'une r√©union",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has notifications data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData.success).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/reunions/{{reunion_test_id}}/notifications/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"reunions",
								"{{reunion_test_id}}",
								"notifications",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Envoyer notification manuelle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Notification sent successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.environment.set(\"notification_test_id\", jsonData.data.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"titre\": \"Test Notification Manuelle\",\n    \"contenu\": \"Ceci est une notification de test envoy√©e manuellement.\",\n    \"type\": \"INFORMATION\",\n    \"destinataires\": [98, 99],\n    \"priorite\": \"NORMALE\",\n    \"canaux\": [\"EMAIL\", \"INTERNE\"]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/reunions/{{reunion_test_id}}/notifications/envoyer",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"reunions",
								"{{reunion_test_id}}",
								"notifications",
								"envoyer"
							]
						}
					},
					"response": []
				},
				{
					"name": "Envoyer notifications automatiques",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Automatic notifications sent\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type_notification\": \"RAPPEL_24H\",\n    \"destinataires_specifiques\": [98, 99],\n    \"forcer_envoi\": false\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/reunions/{{reunion_test_id}}/notifications/automatiques",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"reunions",
								"{{reunion_test_id}}",
								"notifications",
								"automatiques"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üìß Notifications Globales",
			"item": [
				{
					"name": "R√©cup√©rer mes notifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"User notifications retrieved\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData).to.have.property('data');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/notifications/?type=INFORMATION&statut=ENVOYE&lu=false",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"notifications",
								""
							],
							"query": [
								{
									"key": "type",
									"value": "INFORMATION"
								},
								{
									"key": "statut",
									"value": "ENVOYE"
								},
								{
									"key": "lu",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "R√©cup√©rer notifications non lues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Unread notifications retrieved\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData).to.have.property('data');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/notifications/non-lues",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"notifications",
								"non-lues"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtenir nombre notifications non lues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Unread count retrieved\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData).to.have.property('count');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/notifications/nombre-non-lues",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"notifications",
								"nombre-non-lues"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtenir statistiques notifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Notification stats retrieved\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"    pm.expect(jsonData).to.have.property('data');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/notifications/stats",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"notifications",
								"stats"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "‚úÖ Gestion Lecture",
			"item": [
				{
					"name": "Marquer notification comme lue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Notification marked as read\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/notifications/marquer-lue/{{notification_test_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"notifications",
								"marquer-lue",
								"{{notification_test_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Marquer toutes notifications comme lues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"All notifications marked as read\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/notifications/marquer-toutes-lues",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"notifications",
								"marquer-toutes-lues"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üóëÔ∏è Gestion Suppression",
			"item": [
				{
					"name": "Supprimer une notification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Notification deleted\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/notifications/{{notification_test_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"notifications",
								"{{notification_test_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Supprimer notifications lues",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Read notifications deleted\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/notifications/supprimer-lues",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"notifications",
								"supprimer-lues"
							]
						}
					},
					"response": []
				},
				{
					"name": "Supprimer toutes notifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"All notifications deleted\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/notifications/supprimer-toutes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"notifications",
								"supprimer-toutes"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "reunion_test_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "notification_test_id",
			"value": "",
			"type": "string"
		}
	]
}
