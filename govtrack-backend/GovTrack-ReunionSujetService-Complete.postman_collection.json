{
	"info": {
		"_postman_id": "reunion-sujet-service-complete",
		"name": "GovTrack - ReunionSujetService Complete",
		"description": "Collection compl√®te pour tester toutes les m√©thodes du ReunionSujetService",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "üîê Authentification",
			"item": [
				{
					"name": "Login Admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@govtrack.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "auth", "login"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data && response.data.token) {",
									"        pm.environment.set('auth_token', response.data.token);",
									"        console.log('‚úÖ Token dauthentification r√©cup√©r√©');",
									"    }",
									"}"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "üìã R√©cup√©rer les Sujets",
			"item": [
				{
					"name": "GET - R√©cup√©rer tous les sujets d'une r√©union",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/sujets/{{reunion_test_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "sujets", "{{reunion_test_id}}"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success');",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data && response.data.length > 0) {",
									"        pm.environment.set('sujet_test_id', response.data[0].id);",
									"        console.log('‚úÖ Sujet trouv√©:', response.data[0].id);",
									"    }",
									"}"
								]
							}
						}
					]
				},
				{
					"name": "GET - R√©cup√©rer un sujet sp√©cifique",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/sujets/sujet/{{sujet_test_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "sujets", "sujet", "{{sujet_test_id}}"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success');",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "‚ûï Cr√©er des Sujets",
			"item": [
				{
					"name": "POST - Cr√©er un sujet",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reunion_ordre_jour_id\": 1,\n    \"titre\": \"Sujet Test - Projet Simandou\",\n    \"description\": \"Point de discussion sur l'avancement du projet Simandou\",\n    \"difficulte_globale\": \"MOYENNE\",\n    \"recommandation\": \"Acc√©l√©rer les travaux de terrassement\",\n    \"statut\": \"EN_ATTENTE\",\n    \"commentaire\": \"Sujet prioritaire pour le CODIR\",\n    \"projet_id\": 1,\n    \"entite_id\": 1,\n    \"niveau_detail\": \"DETAILLE\",\n    \"objectifs_actifs\": true,\n    \"difficultes_actives\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/sujets/{{reunion_test_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "sujets", "{{reunion_test_id}}"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success');",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data && response.data.id) {",
									"        pm.environment.set('sujet_test_id', response.data.id);",
									"        console.log('‚úÖ Sujet cr√©√©:', response.data.id);",
									"    }",
									"}"
								]
							}
						}
					]
				},
				{
					"name": "POST - Cr√©er plusieurs sujets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sujets\": [\n        {\n            \"reunion_ordre_jour_id\": 1,\n            \"titre\": \"Sujet Multiple 1 - Budget Q4\",\n            \"description\": \"R√©vision du budget du 4√®me trimestre\",\n            \"difficulte_globale\": \"FAIBLE\",\n            \"recommandation\": \"Approuver le budget propos√©\",\n            \"statut\": \"EN_ATTENTE\",\n            \"projet_id\": 1,\n            \"entite_id\": 1,\n            \"niveau_detail\": \"SIMPLE\",\n            \"objectifs_actifs\": false,\n            \"difficultes_actives\": false\n        },\n        {\n            \"reunion_ordre_jour_id\": 1,\n            \"titre\": \"Sujet Multiple 2 - Ressources Humaines\",\n            \"description\": \"Recrutement de nouveaux collaborateurs\",\n            \"difficulte_globale\": \"ELEVEE\",\n            \"recommandation\": \"Lancer les appels d'offres\",\n            \"statut\": \"EN_ATTENTE\",\n            \"projet_id\": 1,\n            \"entite_id\": 1,\n            \"niveau_detail\": \"DETAILLE\",\n            \"objectifs_actifs\": true,\n            \"difficultes_actives\": true\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/sujets/{{reunion_test_id}}/multiple",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "sujets", "{{reunion_test_id}}", "multiple"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success');",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data && response.data.length > 0) {",
									"        console.log('‚úÖ Sujets multiples cr√©√©s:', response.data.length);",
									"    }",
									"}"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "‚úèÔ∏è Modifier des Sujets",
			"item": [
				{
					"name": "PUT - Modifier un sujet",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"titre\": \"Sujet Test - Projet Simandou (Modifi√©)\",\n    \"description\": \"Point de discussion sur l'avancement du projet Simandou - Mise √† jour\",\n    \"difficulte_globale\": \"ELEVEE\",\n    \"recommandation\": \"Acc√©l√©rer les travaux et augmenter les effectifs\",\n    \"statut\": \"EN_COURS_DE_RESOLUTION\",\n    \"commentaire\": \"Sujet prioritaire - Action imm√©diate requise\",\n    \"niveau_detail\": \"DETAILLE\",\n    \"objectifs_actifs\": true,\n    \"difficultes_actives\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/sujets/{{sujet_test_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "sujets", "{{sujet_test_id}}"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success');",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success) {",
									"        console.log('‚úÖ Sujet modifi√©');",
									"    }",
									"}"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "üîÑ R√©organiser les Sujets",
			"item": [
				{
					"name": "POST - R√©organiser l'ordre des sujets (Non applicable)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ordre_sujets\": [\n        {\n            \"id\": \"{{sujet_test_id}}\",\n            \"ordre\": 3\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/sujets/{{reunion_test_id}}/reorder",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "sujets", "{{reunion_test_id}}", "reorder"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success');",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success) {",
									"        console.log('‚úÖ R√©organisation des sujets (ordre g√©r√© par ordre du jour)');",
									"    }",
									"}"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "üìä Changer le Statut",
			"item": [
				{
					"name": "POST - Changer le statut d'un sujet",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statut\": \"EN_COURS_DE_RESOLUTION\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/sujets/{{sujet_test_id}}/statut",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "sujets", "{{sujet_test_id}}", "statut"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success');",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success) {",
									"        console.log('‚úÖ Statut du sujet modifi√©');",
									"    }",
									"}"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "üìà Statistiques",
			"item": [
				{
					"name": "GET - Statistiques des sujets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/sujets/{{reunion_test_id}}/stats",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "sujets", "{{reunion_test_id}}", "stats"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success');",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data) {",
									"        console.log('‚úÖ Statistiques r√©cup√©r√©es:', response.data);",
									"    }",
									"}"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "üóëÔ∏è Supprimer des Sujets",
			"item": [
				{
					"name": "DELETE - Supprimer un sujet",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/sujets/{{sujet_test_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "sujets", "{{sujet_test_id}}"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success');",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success) {",
									"        console.log('‚úÖ Sujet supprim√©');",
									"    }",
									"}"
								]
							}
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000"
		},
		{
			"key": "auth_token",
			"value": ""
		},
		{
			"key": "reunion_test_id",
			"value": "1"
		},
		{
			"key": "sujet_test_id",
			"value": ""
		}
	]
}
