{
	"info": {
		"_postman_id": "reunion-ordre-jour-service-complete",
		"name": "GovTrack - ReunionOrdreJourService Complete",
		"description": "Collection compl√®te pour tester toutes les m√©thodes du ReunionOrdreJourService",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "üîê Authentification",
			"item": [
				{
					"name": "Login Admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@govtrack.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "auth", "login"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data && response.data.token) {",
									"        pm.environment.set('auth_token', response.data.token);",
									"        console.log('‚úÖ Token dauthentification r√©cup√©r√©');",
									"    }",
									"}"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "üìã R√©cup√©rer l'Ordre du Jour",
			"item": [
				{
					"name": "GET - R√©cup√©rer l'ordre du jour d'une r√©union",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/ordre-jour/{{reunion_test_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "ordre-jour", "{{reunion_test_id}}"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success');",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data && response.data.length > 0) {",
									"        pm.environment.set('point_test_id', response.data[0].id);",
									"        console.log('‚úÖ Point dordre du jour trouv√©:', response.data[0].id);",
									"    }",
									"}"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "‚ûï Ajouter des Points",
			"item": [
				{
					"name": "POST - Ajouter un point √† l'ordre du jour",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"titre\": \"Point Test - Suivi Projet Simandou\",\n    \"description\": \"Point de suivi sur l'avancement du projet Simandou\",\n    \"type\": \"SUIVI_PROJETS\",\n    \"duree_estimee_minutes\": 30,\n    \"responsable_id\": 98,\n    \"ordre\": 1,\n    \"niveau_detail\": \"DETAILLE\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/ordre-jour/{{reunion_test_id}}/points",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "ordre-jour", "{{reunion_test_id}}", "points"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success');",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data && response.data.id) {",
									"        pm.environment.set('point_test_id', response.data.id);",
									"        console.log('‚úÖ Point dordre du jour cr√©√©:', response.data.id);",
									"    }",
									"}"
								]
							}
						}
					]
				},
				{
					"name": "POST - Ajouter plusieurs points √† l'ordre du jour",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"points\": [\n        {\n            \"titre\": \"Point Multiple 1 - Budget Q4\",\n            \"description\": \"R√©vision du budget du 4√®me trimestre\",\n            \"type\": \"SUJET_SPECIFIQUE\",\n            \"duree_estimee_minutes\": 45,\n            \"responsable_id\": 99,\n            \"ordre\": 2,\n            \"niveau_detail\": \"DETAILLE\"\n        },\n        {\n            \"titre\": \"Point Multiple 2 - Point Divers\",\n            \"description\": \"Questions diverses et annonces\",\n            \"type\": \"POINT_DIVERS\",\n            \"duree_estimee_minutes\": 15,\n            \"ordre\": 3,\n            \"niveau_detail\": \"SIMPLE\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/ordre-jour/{{reunion_test_id}}/points/multiple",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "ordre-jour", "{{reunion_test_id}}", "points", "multiple"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success');",
									"});",
									"",
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data && response.data.length > 0) {",
									"        console.log('‚úÖ Points multiples cr√©√©s:', response.data.length);",
									"    }",
									"}"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "‚úèÔ∏è Modifier des Points",
			"item": [
				{
					"name": "PUT - Modifier un point de l'ordre du jour",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"titre\": \"Point Test - Suivi Projet Simandou (Modifi√©)\",\n    \"description\": \"Point de suivi sur l'avancement du projet Simandou - Mise √† jour\",\n    \"type\": \"SUIVI_PROJETS\",\n    \"duree_estimee_minutes\": 45,\n    \"responsable_id\": 99,\n    \"ordre\": 1,\n    \"niveau_detail\": \"DETAILLE\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/ordre-jour/points/{{point_test_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "ordre-jour", "points", "{{point_test_id}}"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success');",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success) {",
									"        console.log('‚úÖ Point dordre du jour modifi√©');",
									"    }",
									"}"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "üîÑ R√©organiser l'Ordre",
			"item": [
				{
					"name": "POST - R√©organiser l'ordre des points",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"new_order\": [\n        {\n            \"id\": \"{{point_test_id}}\",\n            \"ordre\": 3\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/ordre-jour/{{reunion_test_id}}/reorder",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "ordre-jour", "{{reunion_test_id}}", "reorder"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success');",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success) {",
									"        console.log('‚úÖ Ordre des points r√©organis√©');",
									"    }",
									"}"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "üìä Changer le Statut",
			"item": [
				{
					"name": "POST - Changer le statut d'un point",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statut\": \"EN_COURS\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/ordre-jour/points/{{point_test_id}}/statut",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "ordre-jour", "points", "{{point_test_id}}", "statut"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success');",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success) {",
									"        console.log('‚úÖ Statut du point modifi√©');",
									"    }",
									"}"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "üìà Statistiques",
			"item": [
				{
					"name": "GET - Statistiques de l'ordre du jour",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/ordre-jour/{{reunion_test_id}}/stats",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "ordre-jour", "{{reunion_test_id}}", "stats"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success');",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data) {",
									"        console.log('‚úÖ Statistiques r√©cup√©r√©es:', response.data);",
									"    }",
									"}"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "üóëÔ∏è Supprimer des Points",
			"item": [
				{
					"name": "DELETE - Supprimer un point de l'ordre du jour",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/ordre-jour/points/{{point_test_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "ordre-jour", "points", "{{point_test_id}}"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success property', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('success');",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success) {",
									"        console.log('‚úÖ Point dordre du jour supprim√©');",
									"    }",
									"}"
								]
							}
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000"
		},
		{
			"key": "auth_token",
			"value": ""
		},
		{
			"key": "reunion_test_id",
			"value": "1"
		},
		{
			"key": "point_test_id",
			"value": ""
		}
	]
}
