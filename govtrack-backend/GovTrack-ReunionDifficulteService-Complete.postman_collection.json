{
	"info": {
		"_postman_id": "difficulte-service-complete",
		"name": "GovTrack - ReunionDifficulteService Complete",
		"description": "Collection complète pour tester toutes les méthodes du service ReunionDifficulteService",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Lister les difficultés d'une réunion",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/difficultes/{{reunion_test_id}}?statut=IDENTIFIEE&niveau_difficulte=ELEVE&search=budget",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"difficultes",
						"{{reunion_test_id}}"
					],
					"query": [
						{
							"key": "statut",
							"value": "IDENTIFIEE"
						},
						{
							"key": "niveau_difficulte",
							"value": "ELEVE"
						},
						{
							"key": "search",
							"value": "budget"
						}
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property('success');",
							"    pm.expect(response.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Response has data field\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property('data');",
							"    pm.expect(response.data).to.be.an('array');",
							"});",
							"",
							"pm.test(\"Response has total field\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property('total');",
							"    pm.expect(response.total).to.be.a('number');",
							"});",
							"",
							"console.log(\"Difficultés récupérées:\", pm.response.json());"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "2. Récupérer une difficulté spécifique",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/difficultes/difficulte/{{difficulte_test_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"difficultes",
						"difficulte",
						"{{difficulte_test_id}}"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property('success');",
							"    pm.expect(response.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Response has data field\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property('data');",
							"    pm.expect(response.data).to.be.an('object');",
							"});",
							"",
							"pm.test(\"Difficulté has required fields\", function () {",
							"    const response = pm.response.json();",
							"    const difficulte = response.data;",
							"    pm.expect(difficulte).to.have.property('id');",
							"    pm.expect(difficulte).to.have.property('objectif_id');",
							"    pm.expect(difficulte).to.have.property('entite_id');",
							"    pm.expect(difficulte).to.have.property('description_difficulte');",
							"    pm.expect(difficulte).to.have.property('niveau_difficulte');",
							"    pm.expect(difficulte).to.have.property('impact');",
							"});",
							"",
							"console.log(\"Difficulté récupérée:\", pm.response.json());"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "3. Créer une nouvelle difficulté",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"objectif_id\": {{objectif_test_id}},\n    \"entite_id\": {{entite_test_id}},\n    \"description_difficulte\": \"Manque de budget pour l'achat d'équipements\",\n    \"niveau_difficulte\": \"ELEVE\",\n    \"impact\": \"Retard dans l'exécution du projet\",\n    \"solution_proposee\": \"Demander un budget supplémentaire\",\n    \"statut\": \"IDENTIFIEE\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/difficultes/{{reunion_test_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"difficultes",
						"{{reunion_test_id}}"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property('success');",
							"    pm.expect(response.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Response has data field\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property('data');",
							"    pm.expect(response.data).to.be.an('object');",
							"});",
							"",
							"pm.test(\"Difficulté created with correct data\", function () {",
							"    const response = pm.response.json();",
							"    const difficulte = response.data;",
							"    pm.expect(difficulte.description_difficulte).to.eql(\"Manque de budget pour l'achat d'équipements\");",
							"    pm.expect(difficulte.niveau_difficulte).to.eql(\"ELEVE\");",
							"    pm.expect(difficulte.statut).to.eql(\"IDENTIFIEE\");",
							"});",
							"",
							"// Sauvegarder l'ID de la difficulté créée",
							"const response = pm.response.json();",
							"if (response.success && response.data && response.data.id) {",
							"    pm.collectionVariables.set(\"difficulte_created_id\", response.data.id);",
							"    console.log(\"Difficulte ID sauvegardé:\", response.data.id);",
							"}",
							"",
							"console.log(\"Difficulté créée:\", pm.response.json());"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "4. Créer plusieurs difficultés en lot",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"difficultes\": [\n        {\n            \"objectif_id\": {{objectif_test_id}},\n            \"entite_id\": {{entite_test_id}},\n            \"description_difficulte\": \"Manque de personnel qualifié\",\n            \"niveau_difficulte\": \"CRITIQUE\",\n            \"impact\": \"Arrêt du projet\",\n            \"solution_proposee\": \"Recruter des experts externes\",\n            \"statut\": \"IDENTIFIEE\"\n        },\n        {\n            \"objectif_id\": {{objectif_test_id}},\n            \"entite_id\": {{entite_test_id}},\n            \"description_difficulte\": \"Délais trop courts\",\n            \"niveau_difficulte\": \"MOYEN\",\n            \"impact\": \"Stress de l'équipe\",\n            \"solution_proposee\": \"Négocier des délais supplémentaires\",\n            \"statut\": \"IDENTIFIEE\"\n        }\n    ]\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/difficultes/{{reunion_test_id}}/multiple",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"difficultes",
						"{{reunion_test_id}}",
						"multiple"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property('success');",
							"    pm.expect(response.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Response has data field\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property('data');",
							"    pm.expect(response.data).to.be.an('array');",
							"});",
							"",
							"pm.test(\"Multiple difficultés created\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response.data).to.have.length(2);",
							"});",
							"",
							"console.log(\"Difficultés créées en lot:\", pm.response.json());"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "5. Mettre à jour une difficulté",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description_difficulte\": \"Manque de budget pour l'achat d'équipements - Mise à jour\",\n    \"niveau_difficulte\": \"CRITIQUE\",\n    \"impact\": \"Retard majeur dans l'exécution du projet\",\n    \"solution_proposee\": \"Demander un budget supplémentaire et optimiser les coûts\",\n    \"statut\": \"EN_COURS_RESOLUTION\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/difficultes/{{difficulte_created_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"difficultes",
						"{{difficulte_created_id}}"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property('success');",
							"    pm.expect(response.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Difficulté updated with correct data\", function () {",
							"    const response = pm.response.json();",
							"    const difficulte = response.data;",
							"    pm.expect(difficulte.description_difficulte).to.include(\"Mise à jour\");",
							"    pm.expect(difficulte.niveau_difficulte).to.eql(\"CRITIQUE\");",
							"    pm.expect(difficulte.statut).to.eql(\"EN_COURS_RESOLUTION\");",
							"});",
							"",
							"console.log(\"Difficulté mise à jour:\", pm.response.json());"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "6. Changer le statut d'une difficulté",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"statut\": \"RESOLUE\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/difficultes/{{difficulte_created_id}}/statut",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"difficultes",
						"{{difficulte_created_id}}",
						"statut"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property('success');",
							"    pm.expect(response.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Statut changed to RESOLUE\", function () {",
							"    const response = pm.response.json();",
							"    const difficulte = response.data;",
							"    pm.expect(difficulte.statut).to.eql(\"RESOLUE\");",
							"});",
							"",
							"console.log(\"Statut de la difficulté changé:\", pm.response.json());"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "7. Ajouter une solution proposée",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"Solution alternative: Utiliser des équipements existants\",\n    \"efficacite_estimee\": \"moyenne\",\n    \"cout_estime\": 5000,\n    \"delai_implementation\": 30\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/difficultes/{{difficulte_created_id}}/solution",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"difficultes",
						"{{difficulte_created_id}}",
						"solution"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property('success');",
							"    pm.expect(response.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Solution added successfully\", function () {",
							"    const response = pm.response.json();",
							"    const difficulte = response.data;",
							"    pm.expect(difficulte).to.have.property('solutions_proposees');",
							"});",
							"",
							"console.log(\"Solution ajoutée:\", pm.response.json());"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "8. Obtenir les statistiques des difficultés",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/difficultes/{{reunion_test_id}}/stats",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"difficultes",
						"{{reunion_test_id}}",
						"stats"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property('success');",
							"    pm.expect(response.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Response has data field\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property('data');",
							"    pm.expect(response.data).to.be.an('object');",
							"});",
							"",
							"pm.test(\"Stats have required fields\", function () {",
							"    const response = pm.response.json();",
							"    const stats = response.data;",
							"    pm.expect(stats).to.have.property('total_difficultes');",
							"    pm.expect(stats).to.have.property('par_statut');",
							"    pm.expect(stats).to.have.property('par_gravite');",
							"});",
							"",
							"console.log(\"Statistiques des difficultés:\", pm.response.json());"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "9. Analyser les risques et difficultés",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/difficultes/{{reunion_test_id}}/analyse-risques",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"difficultes",
						"{{reunion_test_id}}",
						"analyse-risques"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property('success');",
							"    pm.expect(response.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Response has data field\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property('data');",
							"    pm.expect(response.data).to.be.an('object');",
							"});",
							"",
							"pm.test(\"Risk analysis has required fields\", function () {",
							"    const response = pm.response.json();",
							"    const analyse = response.data;",
							"    pm.expect(analyse).to.have.property('total_difficultes');",
							"    pm.expect(analyse).to.have.property('niveau_risque_global');",
							"    pm.expect(analyse).to.have.property('recommandations');",
							"});",
							"",
							"console.log(\"Analyse des risques:\", pm.response.json());"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "10. Supprimer une difficulté",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{auth_token}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/v1/difficultes/{{difficulte_created_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"difficultes",
						"{{difficulte_created_id}}"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has success field\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.have.property('success');",
							"    pm.expect(response.success).to.be.true;",
							"});",
							"",
							"pm.test(\"Difficulté deleted successfully\", function () {",
							"    const response = pm.response.json();",
							"    pm.expect(response.message).to.include(\"supprimée\");",
							"});",
							"",
							"console.log(\"Difficulté supprimée:\", pm.response.json());"
						],
						"type": "text/javascript"
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "reunion_test_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "difficulte_test_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "objectif_test_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "entite_test_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "difficulte_created_id",
			"value": "",
			"type": "string"
		}
	]
}
